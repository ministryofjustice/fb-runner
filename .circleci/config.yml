version: 2.1
orbs:
  ruby: circleci/ruby@1.4.0
  node: circleci/node@4.5.1
  slack: circleci/slack@3.4.2
  browser-tools: circleci/browser-tools@1.2.4

jobs:
  build:
    docker: &ruby_image
      - image: 'cimg/ruby:2.7.6-node'
    steps:
      - checkout
      - ruby/install-deps
      - run: &node_version
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v14.19.0
            nvm alias default 14.19.0

            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - node/install-packages:
          pkg-manager: yarn
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: main
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  lint:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: running rubocop
      - slack/status: *slack_status
  security:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - run: bundle exec brakeman -q --no-pager
      - slack/status: *slack_status
  test:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - run: *node_version
      - node/install-packages:
          pkg-manager: yarn
      - run: bundle exec rspec
      - slack/status: *slack_status
  build_and_push_image_test:
    docker: &ecr_image
      - image: $AWS_BUILD_IMAGE_ECR_ACCOUNT_URL
        aws_auth:
          aws_access_key_id: $AWS_BUILD_IMAGE_ACCESS_KEY_ID
          aws_secret_access_key: $AWS_BUILD_IMAGE_SECRET_ACCESS_KEY
    steps:
      - checkout
      - setup_remote_docker: &remote_docker
          docker_layer_caching: true
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_afe3715efcfd08e161d41810cd6b6daa" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images for test
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_test_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: &ssh_keys
          fingerprints:
            - "af:e3:71:5e:fc:fd:08:e1:61:d4:18:10:cd:6b:6d:aa"
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners test dev
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-test-dev
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  deploy_to_test_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in test production
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-test-production
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  acceptance_tests:
    docker: *ruby_image
    steps:
      - browser-tools/install-chrome
      - browser-tools/install-chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - run:
          name: Run acceptance tests
          environment:
            CI_MODE: 'true'
          command: |
            git clone https://github.com/ministryofjustice/fb-acceptance-tests

            cd fb-acceptance-tests/integration
            cp tests.env.ci tests.env
            bundle install

            bundle exec rspec spec/features/v2
      - slack/status: *slack_status
  build_and_push_image_live:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: build and push docker images for live
          environment:
            ENVIRONMENT_NAME: live
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_live_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners live dev
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-live-dev
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Dev  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Dev  :try_not_to_cry:"
          include_job_number_field: false
  deploy_to_live_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in live production
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-live-production
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Production  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Production  :try_not_to_cry:"
          include_job_number_field: false
  smoke_tests:
    docker: *ecr_image
    steps:
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: Run smoke tests
          command: './deploy-scripts/bin/smoke_tests'
      - slack/status: *slack_status

workflows:
  version: 2
  test_and_build:
    jobs:
      - build
      - lint:
          requires:
            - build
      - security:
          requires:
            - build
      - test:
          requires:
            - build
      - build_and_push_image_test:
          requires:
            - lint
            - security
            - test
          filters:
            branches:
              only:
                - main
                - maintenance-page
      - deploy_to_test_dev:
          requires:
            - build_and_push_image_test
      - deploy_to_test_production:
          requires:
            - build_and_push_image_test
      # - acceptance_tests:
      #     requires:
      #       - deploy_to_test_dev
      #       - deploy_to_test_production
      # - build_and_push_image_live:
      #     requires:
      #       - acceptance_tests
      # - deploy_to_live_dev:
      #     requires:
      #       - acceptance_tests
      #       - build_and_push_image_live
      # - deploy_to_live_production:
      #     requires:
      #       - acceptance_tests
      #       - build_and_push_image_live
      # - smoke_tests:
      #     requires:
      #       - deploy_to_live_dev
      #       - deploy_to_live_production
