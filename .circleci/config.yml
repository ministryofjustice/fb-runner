version: 2.1
orbs:
  ruby: circleci/ruby@1.4.0
  node: circleci/node@5.1.0
  slack: circleci/slack@3.4.2
  browser-tools: circleci/browser-tools@1.4.3
  aws-cli: circleci/aws-cli@4.0.0

jobs:
  login-to-aws:
    docker: &docker_image
      - image: 'cimg/ruby:3.1.3-node'
    steps:
      - checkout
      - aws-cli/setup:
          role_arn: $ECR_ROLE_TO_ASSUME # this will use the env var
          region: $ECR_REGION # this will use the env var
      - run: &ecr_login
          name: Login to ecr
          command: |
            aws ecr get-login-password --region $ECR_REGION | docker login --username AWS --password-stdin ${AWS_ECR_REGISTRY_ID}.dkr.ecr.${ECR_REGION}.amazonaws.com
            aws configure export-credentials --format env
      - run: |
          cp $BASH_ENV bash.env
      - persist_to_workspace:
          root: .
          paths:
            - bash.env
  build:
    docker: &ruby_image
      - image: 'cimg/ruby:3.1.3-node'
    steps:
      - checkout
      - ruby/install-deps
      - run: &node_version
          name: Swap node versions
          command: |
            set +e
            wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm install v16.20.1
            nvm alias default 16.20.1

            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - node/install-packages:
          pkg-manager: yarn
      - slack/status: &slack_status
          fail_only: true
          only_for_branches: main
          failure_message: ":facepalm:  Failed job $CIRCLE_JOB  :homer-disappear:"
          include_job_number_field: false
  lint:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check:
          format: progress
          label: running rubocop
      - slack/status: *slack_status
  security:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - run: bundle exec brakeman -q --no-pager
      - slack/status: *slack_status
  test:
    docker: *ruby_image
    steps:
      - checkout
      - ruby/install-deps
      - run: *node_version
      - node/install-packages:
          pkg-manager: yarn
      - run: bundle exec rspec
      - slack/status: *slack_status
  build_and_push_image_test:
    docker: &ecr_image
      - image: docker.io/ministryofjustice/fb-builder:latest
        auth:
          username: $DOCKER_LOGIN
          password: $DOCKER_PASSWORD
    steps:
      - checkout
      - setup_remote_docker: &remote_docker
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - run: &workspace_envs
          command: |
            cat bash.env >> $BASH_ENV
      - run: &base_environment_variables
          name: Setup base environment variable
          command: |
            echo "export BUILD_SHA=$CIRCLE_SHA1" >> $BASH_ENV
            echo "export SSH_FILE_FOR_SECRETS=~/.ssh/id_rsa_23329fec1881113a3b02b7ad212ab271" >> $BASH_ENV
      - run: &deploy_scripts
          name: cloning deploy scripts
          command: 'git clone git@github.com:ministryofjustice/fb-deploy.git deploy-scripts'
      - run:
          name: build and push docker images for test
          environment:
            ENVIRONMENT_NAME: test
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_test_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: &ssh_keys
          fingerprints:
            - "23:32:9f:ec:18:81:11:3a:3b:02:b7:ad:21:2a:b2:71"
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners test dev
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-test-dev
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  deploy_to_test_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in test production
          environment:
            PLATFORM_ENV: test
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-test-production
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status: *slack_status
  acceptance_tests:
    docker: *ruby_image
    steps:
      - checkout
      - run: sudo apt-get update
      - browser-tools/install-chrome:
          # TODO remove following line when fixed https://github.com/CircleCI-Public/browser-tools-orb/issues/90
          chrome-version: 116.0.5845.96
      - browser-tools/install-chromedriver
      - run:
          name: Check browser tools install
          command: |
            google-chrome --version
            chromedriver --version
      - run:
          name: Run acceptance tests
          environment:
            CI_MODE: 'true'
          command: |
            git clone https://github.com/ministryofjustice/fb-acceptance-tests

            cd fb-acceptance-tests/integration
            cp tests.env.ci tests.env
            bundle install

            bundle exec rspec spec/features/v2
      - slack/status: *slack_status
  build_and_push_image_live:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - attach_workspace:
          at: .
      - run: *workspace_envs
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: build and push docker images for live
          environment:
            ENVIRONMENT_NAME: live
          command: './deploy-scripts/bin/build'
      - slack/status: *slack_status
  deploy_to_live_dev:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners live dev
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: dev
            K8S_NAMESPACE: formbuilder-services-live-dev
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Dev  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Dev  :try_not_to_cry:"
          include_job_number_field: false
  deploy_to_live_production:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - add_ssh_keys: *ssh_keys
      - run: *base_environment_variables
      - run: *deploy_scripts
      - run:
          name: Restart the runners in live production
          environment:
            PLATFORM_ENV: live
            DEPLOYMENT_ENV: production
            K8S_NAMESPACE: formbuilder-services-live-production
            RUNNER_TYPE: fb-runner
          command: './deploy-scripts/bin/eks_restart_all_pods'
      - slack/status:
          only_for_branches: main
          success_message: ":rocket:  Successfully deployed to Live Production  :guitar:"
          failure_message: ":alert:  Failed to deploy to Live Production  :try_not_to_cry:"
          include_job_number_field: false
  smoke_tests:
    docker: *ecr_image
    steps:
      - checkout
      - setup_remote_docker: *remote_docker
      - run: *deploy_scripts
      - run:
          name: Run smoke tests
          command: './deploy-scripts/bin/smoke_tests'
      - slack/status: *slack_status

workflows:
  version: 2
  test_and_build:
    jobs:
      - login-to-aws:
          context: &moj-forms-context
            - moj-forms
      - build:
          requires:
            - login-to-aws
      - lint:
          context: *moj-forms-context
          requires:
            - build
      - security:
          context: *moj-forms-context
          requires:
            - build
      - test:
          context: *moj-forms-context
          requires:
            - build
      - build_and_push_image_test:
          context: *moj-forms-context
          requires:
            - lint
            - security
            - test
          filters:
            branches:
              only:
                - main
      - deploy_to_test_dev:
          context: *moj-forms-context
          requires:
            - build_and_push_image_test
      - deploy_to_test_production:
          context: *moj-forms-context
          requires:
            - build_and_push_image_test
      - acceptance_tests:
          context: *moj-forms-context
          requires:
            - deploy_to_test_dev
            - deploy_to_test_production
      - build_and_push_image_live:
          context: *moj-forms-context
          requires:
            - acceptance_tests
          filters:
            branches:
              only: main
      - deploy_to_live_dev:
          context: *moj-forms-context
          requires:
            - acceptance_tests
            - build_and_push_image_live
          filters:
            branches:
              only: main
      - deploy_to_live_production:
          context: *moj-forms-context
          requires:
            - acceptance_tests
            - build_and_push_image_live
          filters:
            branches:
              only: main
      - smoke_tests:
          context: *moj-forms-context
          requires:
            - deploy_to_live_dev
            - deploy_to_live_production
